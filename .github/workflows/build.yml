name: Build and publish Elixir image

on:
  workflow_dispatch:
  push:

env:
  ALPINE_VERSION: "3.18.4"
  ERLANG_VERSION: "26.1.1"
  ERLANG_DOWNLOAD_SHA256: "30de56e687cef15c73ef2e2e5bc8a94d28f959656e716e0a65092af7d360af57"
  ELIXIR_VERSION: "1.15.6"
  ELIXIR_DOWNLOAD_SHA256: "385fc1958bcf9023a748acf8c42179a0c6123c89744396840bdcd661ee130177"

jobs:
  build:
    strategy:
      matrix:
        include:
          - runner: ubuntu-22.04-firezone
            platforms: linux/amd64,linux/arm64
    permissions:
      contents: read
      id-token: write
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          # We are overriding the default buildkit version being used by Buildx. We need buildkit >= 12.0 and currently BuildX
          # supports v0.11.6 https://github.com/docker/buildx/blob/b8739d74417f86aa8fc9aafb830a8ba656bdef0e/Dockerfile#L9.
          # We should for any updates on buildx and on the setup-buildx-action itself.
          driver-opts: |
            image=moby/buildkit:v0.12.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: actions/checkout@v4
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: "projects/397012414171/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions"
          service_account: "github-actions@github-iam-387915.iam.gserviceaccount.com"
          export_environment_variables: false
      - name: Change current gcloud account
        run: gcloud --quiet config set project firezone-containers
      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: "us-central1-docker.pkg.dev"
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Build Docker images
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: ${{ matrix.platforms }}
          file: Dockerfile
          build-args: |
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}
            ERLANG_VERSION=${{ env.ERLANG_VERSION }}
            ERLANG_DOWNLOAD_SHA256=${{ env.ERLANG_DOWNLOAD_SHA256 }}
            ELIXIR_VERSION=${{ env.ELIXIR_VERSION }}
            ELIXIR_DOWNLOAD_SHA256=${{ env.ELIXIR_DOWNLOAD_SHA256 }}
          cache-from: |
            type=registry,ref=us-central1-docker.pkg.dev/firezone-containers/cache/elixir:${{ env.ELIXIR_VERSION }}-otp-${{ env.ERLANG_VERSION }}
          cache-to: |
            type=registry,ref=us-central1-docker.pkg.dev/firezone-containers/cache/elixir:${{ env.ELIXIR_VERSION }}-otp-${{ env.ERLANG_VERSION }}
          tags: |
            us-central1-docker.pkg.dev/firezone-containers/elixir:${{ env.ELIXIR_VERSION }}-otp-${{ env.ERLANG_VERSION }}
